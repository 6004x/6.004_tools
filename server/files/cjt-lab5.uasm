.include "/shared/bsim/beta.uasm"
.include "/shared/bsim/lab5checkoff.uasm"

count_bull_cows:
    PUSH(LP)
    PUSH(BP)
    MOVE(SP, BP)
    PUSH(R1)
    PUSH(R2)
    PUSH(R3)
    PUSH(R4)
    PUSH(R5)
    PUSH(R6)
    PUSH(R7)
    PUSH(R8)
    PUSH(R9)
    PUSH(R10)
    PUSH(R14)
    PUSH(R15)
    PUSH(R16)
    a = R1
    b = R2
    bulls = R3
    cows = R4
    mask = R5
    i = R6
    j = R7
    btemp = R8
    atry = R9
    btry = R10


    // Put a and b into a and R2, respectively.
    LD(BP,-12,a)
    LD(BP,-16,b)

    CMOVE(0x0, bulls)
    CMOVE(0xF, mask)
    CMOVE(0x0, i)
    bull_loop:
        AND(a, mask, R15)
        AND(b, mask, R16)
        CMPEQ(R15, R16, R14)
        BEQ(R14,bull_shift)
            ADDC(bulls, 1, bulls)
            OR(a, mask, a)
            OR(b, mask, b)

        bull_shift:
        SHLC(mask,4,mask)
        ADDC(i, 1, i)
        CMPLTC(i, 4, R14)
        BNE(R14, bull_loop)

    CMOVE(0x0, cows)
    CMOVE(0x0, i)


    cow_outer_loop:
        ANDC(a, 0xF, atry)
        SHRC(a, 4, a)

        CMPEQC(atry, 0xF, R14)
        BNE(R14, cow_end_outer_if, R14)

            MOVE(b, btemp)
            CMOVE(0xF, mask)
            CMOVE(0, j)
            cow_inner_loop:
                ANDC(btemp, 0xF, btry)
                SHRC(btemp, 4, btemp)
                CMPEQ(btry, atry, R14)
                BEQ(R14, cow_end_inner_if)
                    ADDC(cows, 1, cows)
                     OR(b, mask, b)
                    BR(cow_break_inner_loop)
                cow_end_inner_if:
                SHLC(mask, 4, mask)

                ADDC(j, 1, j)
                CMPLTC(j, 4, R14)
                BNE(R14, cow_inner_loop)

            cow_break_inner_loop:
        cow_end_outer_if:

        ADDC(i, 1, i)
        CMPLTC(i, 4, R14)
        BNE(R14, cow_outer_loop)

    SHLC(bulls, 4, bulls)
    MOVE(bulls, R0)
    OR(cows, R0, R0)

    POP(R16)
    POP(R15)
    POP(R14)
    POP(R10)
    POP(R9)
    POP(R8)
    POP(R7)
    POP(R6)
    POP(R5)
    POP(R4)
    POP(R3)
    POP(R2)
    POP(R1)
    MOVE(BP,SP)
    POP(BP)
    POP(LP)
    RTN()

StackBase: LONG(.+4)
    . = .+0x1000
