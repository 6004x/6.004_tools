// information on how to contact the on-line assignments server.  A checksum
// is included that is computed from the .verify statements, so don't change
// those or you won't be able to complete your checkoff!

.checkoff "https://6004.mit.edu/ssldocs/6004xassignment.doit" "Lab #2" 896745534

// a list of expected values for nodes s3, s2, s1, s0.  The first data value
// (0x00) is compared against the actual node values at time 9.9ns into the
// simulation, the second value (0x01) at time 19.9ns, and so on.

.verify s3 s2 s1 s0 periodic(9.9n,10n)
+ 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7
+ 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8
+ 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9
+ 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA
+ 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB
+ 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC
+ 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD
+ 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE

// create an instance of the test circuit and feed it with input values generated
// by the waveform devices specified below.

Xtest adder3 a2 a1 a0 b2 b1 b0 s3 s2 s1 s0

// Generate two 3-bit values that cycle through all 64 possible input combinations.
// The "A" inputs change every 80ns, the "B" inputs change every 10ns.

Wa a3 a2 a1 a0 nrz(0,1.0,80n,0n,.1n,.1n)
+ 0 1 2 3 4 5 6 7

Wb b2 b1 b0 nrz(0,1.0,10n,0n,.1n,.1n)
+ 0 1 2 3 4 5 6 7
+ 0 1 2 3 4 5 6 7
+ 0 1 2 3 4 5 6 7
+ 0 1 2 3 4 5 6 7
+ 0 1 2 3 4 5 6 7
+ 0 1 2 3 4 5 6 7
+ 0 1 2 3 4 5 6 7
+ 0 1 2 3 4 5 6 7

// Run the simulation long enough to test all 64 input combinations.

.tran 640n

// Some useful plots... you can plot additional signals by specifying
// the appropriate .plot commands in your main netlist file.

.plot L(a2,a1,a0)
.plot L(b2,b1,b0)
.plot L(s3,s2,s1,s0)
