{
	"dir1":
	{
		"cjtserver.js":[],
		"dir2":
		{
			"fileindir2.js":
			{
				"name":"//dir1/dir2/fileindir2.js",
				"data":"this is another test file"
			}
		},
		"testfile.jsim":
		{
			"name":"//dir1/testfile.jsim",
			"data":"this is a test file"
		}
	},

	"lab 3":
	{
		"lab3.jsim":
		{
			"name":"//lab 3/lab3.jsim",
			"data":".include \"shared/nominal.jsim\"\n.include \"shared/stdcell.jsim\"\n\n \n.subckt BOOL alufn[3:0] A[31:0] B[31:0] OUT[31:0]\nXmuxl A[0:31] B[0:31] alufn[0]#32 alufn[1]#32 alufn[2]#32 alufn[3]#32 OUT[0:31] mux4\n.ends\n\n.subckt FA a b ci s co\nXsum1 a b i xor2\nXsum2 i ci s xor2\nXcarry1 a b j or2\nXcarry2 j ci k and2\nXcarry3 a b l and2\nXcarry4 l k co or2\n.ends\n\n.subckt ARITH alufn[1:0] A[31:0] B[31:0] OUT[31:0] Z V N\n*adder/subtracter portion\nXnor1 alufn[0]#32 B[0:31] XB[0:31] xor2\nXbit0 A[0] XB[0] alufn[0] OUT[0] car[0] FA \nXbitn A[1:31] XB[1:31] car[0:30] OUT[1:31] car[1:31] FA \n\n*calculates N as last digit of the summed number\nXbuf2 OUT[31] N buffer\n\n*calculates the overflow V\nXinvS31 OUT[31] notS31 inverter\nXv1 A[31] XB[31] notS31 v1 and3\nXinvA31 A[31] notXA31 inverter\nXinvB31 XB[31] notXB31 inverter\nXv2 notXA31 notXB31 OUT[31] v2 and3\nXvf v1 v2 V or2\n\n*counts for all zeroes, passes along the 1's up on a tree if they exists (by a tree of OR's)\n*and then nor's the input, if there is a 1, then Z is zero, and vice-versa. \nXnorz1 OUT[0:15] OUT[16:31] C[0:15] or2\nXnorz2 C[0:7] C[8:15] D[0:7] or2\nXnorz3 D[0:3] D[4:7] E[0:3] or2\nXnorz4 E[0:1] E[2:3] G[0:1] or2\n\nXnorz5 G[0] G[1] Z nor2\n\n.ends\n\n\n.subckt SHIFT alufn[1:0] A[31:0] B[31:0] OUT[31:0]\nXmuxfill alufn[1] alufn[1] A[31] fill mux2\nXshiftL A[31:0] B[4:0] G[31:0] SHIFTL\nXshiftR A[31:0] B[4:0] fill H[31:0] SHIFTR\nXmux1 alufn[0]#32 G[31:0] H[31:0] OUT[31:0] mux2\n\n.ends \n\n.subckt SHIFTL A[31:0] B[4:0] E[31:0]\nXdummy GND[31:0] constant0\nXmux16 B4#16 A[31:16] A[15:0] W[31:16] mux2\nXmux162 B4#16 A[15:0] GND[15:0] W[15:0] mux2\n\nXmux8 B3#24 W[31:8] W[23:0] X[31:8] mux2\nXmux82 B3#8 W[7:0] GND[7:0] X[7:0] mux2\n\nXmux4 B2#28 X[31:4] X[27:0] Y[31:4] mux2\nXmux42 B2#4 X[3:0] GND[3:0] Y[3:0] mux2\n\nXmux2 B1#30 Y[31:2] Y[29:0] Z[31:2] mux2\nXmux22 B1#2 Y[1:0] GND[1:0] Z[1:0] mux2\n\nXmux1 B0#31 Z[31:1] Z[30:0] E[31:1] mux2\nXmux12 B0#1 Z[0] GND[0] E[0] mux2\n.ends\n\n.subckt SHIFTR A[31:0] B[4:0] fill E[31:0]\nXnegmux16 B[4]#16 A[15:0] A[31:16] W[15:0] mux2\nXnegmux162 B[4]#16 A[31:16] fill#16 W[31:16] mux2\n\nXnegmux8 B[3]#24 W[23:0] W[31:8] X[23:0] mux2\nXnegmux82 B[3]#8 W[31:24] fill#8 X[31:24] mux2\n\nXnegmux4 B[2]#28 X[27:0] X[31:4] Y[27:0] mux2\nXnegmux42 B[2]#4 X[31:28] fill#4 Y[31:28] mux2\n\nXnegmux2 B[1]#30 Y[29:0] Y[31:2] Z[29:0] mux2\nXnegmux22 B[1]#2 Y[31:30] fill#2 Z[31:30] mux2\n\nXnegmux1 B[0]#31 Z[30:0] Z[31:1] E[30:0] mux2\nXnegmux12 B[0]#1 Z[31] fill E[31] mux2\n.ends\n.subckt CMP alufn3 alufn1 Z V N OUT[31:0] \nxdummy OUT[31:1] constant0\nxlt N V P xor2\nxlteq Z P Q or2\nXmuxc alufn3 alufn1 Z Q P OUT[1] OUT[0] mux4\n.ends \n \n.subckt alu alufn[4:0] a[31:0] b[31:0] out[31:0] z v n \n \n*** Generate outputs from each of BOOL, SHIFT, ARITH, CMP subcircuits: \nxbool alufn[3:0] a[31:0] b[31:0] boolout[31:0] BOOL \nxshift alufn[1:0] a[31:0] b[31:0] shiftout[31:0] SHIFT \nxarith alufn[1:0] a[31:0] b[31:0] arithout[31:0] z v n ARITH \nxcmp alufn[3] alufn[1] z v n cmpout[31:0] CMP \n \n*** Combine them, using three multiplexors: \nxmux1 alufn[4]#32 nonbool[31:0] boolout[31:0] out[31:0] mux2 \nxmux2 alufn[2]#32 arithshift[31:0] cmpout[31:0] nonbool[31:0] mux2 \nxmux3 alufn[3]#32 arithout[31:0] shiftout[31:0] arithshift[31:0] mux2 \n \n.ends"
		},
	},
	"lab 6":
	{
		"alu":
		{
		},
		"lab6 tests":
		{
			"lab6checkoff.jsim":
			{
				"name":"//lab 6/lab6 tests/lab6checkoff.jsim",
				"data":"// information on how to contact the on-line assignments server. A checksum\n// is included that is computed from the .verify statements, so don't change\n// those or you won't be able to complete your checkoff!\n\n.checkoff \"6004.mit.edu/currentsemester/6004assignment.doit\" \"Lab #6\" 995076215\n\nXbeta clk reset irq ia[31:0] id[31:0] ma[31:0] moe mrd[31:0] wr mwd[31:0] beta\n\n// memory is loaded with lab6.uasm\nXmem\n+ vdd 0 0 ia[11:2] id[31:0]\n+ moe 0 0 ma[11:2] mrd[31:0]\n+ 0 clk wr ma[11:2] mwd[31:0]\n+ $memory width=32 nlocations=1024 contents=(\n+ 0x73df000a 0x73ff0003 0x6ffe0000 0xc3e00000 0x73fffffe 0xd01e0004 0x73e00002 0x801ef800\n+ 0x73fffffa 0xc0210001 0x6ffe0000 0x73ff0002 0xc01f0005 0x73fffff5 0xd01f0000 0x77e00002\n+ 0xc01f0006 0x73fffff1 0xd81f0000 0x77e00002 0xc01f0007 0x73ffffed 0xd41f0001 0x77e00002\n+ 0xc01f0008 0x73ffffe9 0xd01fffff 0x73e00002 0xc01f0009 0x73ffffe5 0xd81fffff 0x73e00002\n+ 0xc01f000a 0x73ffffe1 0xd41fffff 0x73e00002 0xc01f000b 0x73ffffdd 0xc03f0001 0xf021001f\n+ 0xc4410001 0xa4611000 0xd063ffff 0x77e30002 0xc01f000c 0x73ffffd5 0x98611000 0x77e30002\n+ 0xc01f000d 0x73ffffd1 0x98620800 0x73e30002 0xc01f000e 0x73ffffcd 0x801ff800 0x73e00002\n+ 0xc01f000f 0x73ffffc9 0xc01f0000 0x73e00002 0xc01f0010 0x73ffffc5 0xc01f0000 0xc03f0001\n+ 0xc05f0002 0xc07f0003 0xc09f0004 0xc0bf0005 0xc0df0006 0xc0ff0007 0xc11f0008 0xc13f0009\n+ 0xc15f000a 0xc17f000b 0xc19f000c 0xc1bf000d 0xc1df000e 0xc1ff000f 0xc21f0010 0xc23f0011\n+ 0xc25f0012 0xc27f0013 0xc29f0014 0xc2bf0015 0xc2df0016 0xc2ff0017 0xc31f0018 0xc33f0019\n+ 0xc35f001a 0xc37f001b 0xc39f001c 0xc3bf001d 0xc3df001e 0xc3ff001f 0xd0000000 0x77e00002\n+ 0xc01f0011 0x73ffffa1 0xd0010001 0x77e00002 0xc01f0012 0x73ffff9d 0xd0020002 0x77e00002\n+ 0xc01f0013 0x73ffff99 0xd0030003 0x77e00002 0xc01f0014 0x73ffff95 0xd0040004 0x77e00002\n+ 0xc01f0015 0x73ffff91 0xd0050005 0x77e00002 0xc01f0016 0x73ffff8d 0xd0060006 0x77e00002\n+ 0xc01f0017 0x73ffff89 0xd0070007 0x77e00002 0xc01f0018 0x73ffff85 0xd0080008 0x77e00002\n+ 0xc01f0019 0x73ffff81 0xd0090009 0x77e00002 0xc01f001a 0x73ffff7d 0xd00a000a 0x77e00002\n+ 0xc01f001b 0x73ffff79 0xd00b000b 0x77e00002 0xc01f001c 0x73ffff75 0xd00c000c 0x77e00002\n+ 0xc01f001d 0x73ffff71 0xd00d000d 0x77e00002 0xc01f001e 0x73ffff6d 0xd00e000e 0x77e00002\n+ 0xc01f001f 0x73ffff69 0xd00f000f 0x77e00002 0xc01f0020 0x73ffff65 0xd0100010 0x77e00002\n+ 0xc01f0021 0x73ffff61 0xd0110011 0x77e00002 0xc01f0022 0x73ffff5d 0xd0120012 0x77e00002\n+ 0xc01f0023 0x73ffff59 0xd0130013 0x77e00002 0xc01f0024 0x73ffff55 0xd0140014 0x77e00002\n+ 0xc01f0025 0x73ffff51 0xd0150015 0x77e00002 0xc01f0026 0x73ffff4d 0xd0160016 0x77e00002\n+ 0xc01f0027 0x73ffff49 0xd0170017 0x77e00002 0xc01f0028 0x73ffff45 0xd0180018 0x77e00002\n+ 0xc01f0029 0x73ffff41 0xd0190019 0x77e00002 0xc01f002a 0x73ffff3d 0xd01a001a 0x77e00002\n+ 0xc01f002b 0x73ffff39 0xd01b001b 0x77e00002 0xc01f002c 0x73ffff35 0xd01c001c 0x77e00002\n+ 0xc01f002d 0x73ffff31 0xd01d001d 0x77e00002 0xc01f002e 0x73ffff2d 0xd01e001e 0x77e00002\n+ 0xc01f002f 0x73ffff29 0x7000ff28 0x73ff0002 0xc01f0030 0x73ffff25 0xc23f0394 0xf021001f\n+ 0xa6218800 0x6f910000 0x77ff0002 0xc01f0032 0x73ffff1e 0xf39c0001 0xf79c0001 0xd2fc0388\n+ 0x77f70002 0xc01f0033 0x73ffff18 0x7f1f0091 0x7f3f0091 0x8358c800 0xd37affff 0x77fb0002\n+ 0xc01f0034 0x73ffff11 0x8358c000 0x875ac800 0xd37affff 0x77fb0002 0xc01f0035 0x73ffff0b\n+ 0x8359c800 0x875ac000 0x73fa0002 0xc01f0036 0x73ffff06 0xc23f0001 0xc6510001 0x73f20002\n+ 0xc01f0037 0x73ffff01 0xc17f0f0f 0xc19f7f00 0xa1ab6000 0xd1cd0f00 0x77ee0002 0xc01f0038\n+ 0x73fffefa 0xa5ab6000 0xd1cd7f0f 0x77ee0002 0xc01f0039 0x73fffef5 0xa9ab6000 0xd1cd700f\n+ 0x77ee0002 0xc01f003a 0x73fffef0 0xadab6000 0xd1cd8ff0 0x77ee0002 0xc01f003b 0x73fffeeb\n+ 0xc37f0001 0xf39b0020 0xd3bc0001 0x77fd0002 0xc01f003c 0x73fffee5 0xf39b001f 0xfb5c0011\n+ 0xd33ac000 0x77f90002 0xc01f003d 0x73fffedf 0xf75c0011 0xd33a4000 0x77f90002 0xc01f003e\n+ 0x73fffeda 0xc3df0000 0xc03f0000 0x20000000 0xf3de0001 0xf7de0001 0xd01e04b0 0x77e00002\n+ 0xc01f003f 0x73fffed1 0x68000000 0x78000000 0x9c000000 0xbc000000 0xdc000000 0xfc000000\n+ 0xd0010007 0x77e00002 0xc01f0040 0x73fffec7 0xc09f05fc 0x7d3f003f 0xe809ffff 0x64040000\n+ 0x641f0600 0x64040008 0x641f0608 0x60c40000 0x7cbf0039 0x90062800 0x77e00002 0xc01f0041\n+ 0x73fffeba 0x60ff0600 0x90072800 0x77e00002 0xc01f0042 0x73fffeb5 0x61040008 0x90082800\n+ 0x77e00002 0xc01f0043 0x73fffeb0 0x613f0608 0x90092800 0x77e00002 0xc01f0044 0x73fffeab\n+ 0x801fa000 0x80200000 0x80400000 0x80600000 0x80800000 0x80a11000 0x80a32800 0x80a42800\n+ 0xd00500a0 0x77e00002 0xc01f0045 0x73fffe9f 0x741f0000 0x80200000 0x80400000 0x80600000\n+ 0x80800000 0x80a11000 0x80a32800 0x80a42800 0xd0052ca0 0x77e00002 0xc01f0046 0x73fffe93\n+ 0xc01f05c8 0x6fe00000 0x73ff0001 0x73ff0003 0x77ff0002 0xc01f0047 0x73fffe8c 0xd01e05cc\n+ 0x77e00002 0xc01f0048 0x73fffe88 0xc3ff0000 0x73fffffe 0xaaaaaaaa 0x55555555\n+ )\n\nVclk clk 0 pulse(3.3,0,49.9ns,.1ns,.1ns,49.9ns)\nVreset reset 0 pwl(0ns 3.3v, 101ns 3.3v, 101.1ns 0v)\nVirq irq 0 pwl(0ns 0v, 1001ns 0v,\n+ 1001.1ns 3.3v,\n+ 1101ns 3.3v,\n+ 1101.1ns 0v,\n+ 26501ns 0v, // assert irq when instruction just //before// ixp: is executed\n+ 26501.1ns 3.3v,\n+ 26601ns 3.3v,\n+ 26601.1ns 0v\n+)\n\n// Run the simulation for 274 cycles\n.tran 27400ns\n\n// Some useful plots... you can plot additional signals by specifying\n// the appropriate .plot commands in your main netlist file.\n\n.plotdef reg R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15\n+ R16 R17 R18 R19 R20 R21 R22 R23 R24 R25 R26 R27 R28 R29 R30 R31\n\n.plot clk\n.plot reset\n.plot irq\n.plot ia[31:0]\n.plot id[31:0]\n.plot ma[31:0]\n.plot moe\n.plot mrd[31:0]\n.plot wr\n.plot mwd[31:0]\n.plot betaop(id[31:26])\n.plot reg(id[20:16])\n.plot reg(id[15:11])\n.plot reg(id[25:21])\n\n.verify ia[31:0] periodic(199n,100n)\n+ 0x80000000 // 199ns\n+ 0x8000002C // 299ns\n+ 0x80000038 // 399ns\n+ 0x8000003C // 499ns\n+ 0x80000048 // 599ns\n+ 0x8000004C // 699ns\n+ 0x80000058 // 799ns\n+ 0x8000005C // 899ns\n+ 0x80000068 // 999ns\n+ 0x8000006C // 1099ns\n+ 0x80000078 // 1199ns\n+ 0x8000007C // 1299ns\n+ 0x80000088 // 1399ns\n+ 0x8000008C // 1499ns\n+ 0x80000098 // 1599ns\n+ 0x8000009C // 1699ns\n+ 0x800000A0 // 1799ns\n+ 0x800000A4 // 1899ns\n+ 0x800000A8 // 1999ns\n+ 0x800000AC // 2099ns\n+ 0x800000B8 // 2199ns\n+ 0x800000BC // 2299ns\n+ 0x800000C8 // 2399ns\n+ 0x800000CC // 2499ns\n+ 0x800000D8 // 2599ns\n+ 0x800000DC // 2699ns\n+ 0x800000E8 // 2799ns\n+ 0x800000EC // 2899ns\n+ 0x800000F8 // 2999ns\n+ 0x800000FC // 3099ns\n+ 0x80000100 // 3199ns\n+ 0x80000104 // 3299ns\n+ 0x80000108 // 3399ns\n+ 0x8000010C // 3499ns\n+ 0x80000110 // 3599ns\n+ 0x80000114 // 3699ns\n+ 0x80000118 // 3799ns\n+ 0x8000011C // 3899ns\n+ 0x80000120 // 3999ns\n+ 0x80000124 // 4099ns\n+ 0x80000128 // 4199ns\n+ 0x8000012C // 4299ns\n+ 0x80000130 // 4399ns\n+ 0x80000134 // 4499ns\n+ 0x80000138 // 4599ns\n+ 0x8000013C // 4699ns\n+ 0x80000140 // 4799ns\n+ 0x80000144 // 4899ns\n+ 0x80000148 // 4999ns\n+ 0x8000014C // 5099ns\n+ 0x80000150 // 5199ns\n+ 0x80000154 // 5299ns\n+ 0x80000158 // 5399ns\n+ 0x8000015C // 5499ns\n+ 0x80000160 // 5599ns\n+ 0x80000164 // 5699ns\n+ 0x80000168 // 5799ns\n+ 0x8000016C // 5899ns\n+ 0x80000170 // 5999ns\n+ 0x80000174 // 6099ns\n+ 0x80000178 // 6199ns\n+ 0x8000017C // 6299ns\n+ 0x80000188 // 6399ns\n+ 0x8000018C // 6499ns\n+ 0x80000198 // 6599ns\n+ 0x8000019C // 6699ns\n+ 0x800001A8 // 6799ns\n+ 0x800001AC // 6899ns\n+ 0x800001B8 // 6999ns\n+ 0x800001BC // 7099ns\n+ 0x800001C8 // 7199ns\n+ 0x800001CC // 7299ns\n+ 0x800001D8 // 7399ns\n+ 0x800001DC // 7499ns\n+ 0x800001E8 // 7599ns\n+ 0x800001EC // 7699ns\n+ 0x800001F8 // 7799ns\n+ 0x800001FC // 7899ns\n+ 0x80000208 // 7999ns\n+ 0x8000020C // 8099ns\n+ 0x80000218 // 8199ns\n+ 0x8000021C // 8299ns\n+ 0x80000228 // 8399ns\n+ 0x8000022C // 8499ns\n+ 0x80000238 // 8599ns\n+ 0x8000023C // 8699ns\n+ 0x80000248 // 8799ns\n+ 0x8000024C // 8899ns\n+ 0x80000258 // 8999ns\n+ 0x8000025C // 9099ns\n+ 0x80000268 // 9199ns\n+ 0x8000026C // 9299ns\n+ 0x80000278 // 9399ns\n+ 0x8000027C // 9499ns\n+ 0x80000288 // 9599ns\n+ 0x8000028C // 9699ns\n+ 0x80000298 // 9799ns\n+ 0x8000029C // 9899ns\n+ 0x800002A8 // 9999ns\n+ 0x800002AC // 10099ns\n+ 0x800002B8 // 10199ns\n+ 0x800002BC // 10299ns\n+ 0x800002C8 // 10399ns\n+ 0x800002CC // 10499ns\n+ 0x800002D8 // 10599ns\n+ 0x800002DC // 10699ns\n+ 0x800002E8 // 10799ns\n+ 0x800002EC // 10899ns\n+ 0x800002F8 // 10999ns\n+ 0x800002FC // 11099ns\n+ 0x80000308 // 11199ns\n+ 0x8000030C // 11299ns\n+ 0x80000318 // 11399ns\n+ 0x8000031C // 11499ns\n+ 0x80000328 // 11599ns\n+ 0x8000032C // 11699ns\n+ 0x80000338 // 11799ns\n+ 0x8000033C // 11899ns\n+ 0x80000348 // 11999ns\n+ 0x8000034C // 12099ns\n+ 0x80000358 // 12199ns\n+ 0x8000035C // 12299ns\n+ 0x80000368 // 12399ns\n+ 0x8000036C // 12499ns\n+ 0x80000378 // 12599ns\n+ 0x8000037C // 12699ns\n+ 0x80000380 // 12799ns\n+ 0x80000384 // 12899ns\n+ 0x80000394 // 12999ns\n+ 0x80000398 // 13099ns\n+ 0x8000039C // 13199ns\n+ 0x800003A0 // 13299ns\n+ 0x800003AC // 13399ns\n+ 0x800003B0 // 13499ns\n+ 0x800003B4 // 13599ns\n+ 0x800003B8 // 13699ns\n+ 0x800003BC // 13799ns\n+ 0x800003C8 // 13899ns\n+ 0x800003CC // 13999ns\n+ 0x800003D0 // 14099ns\n+ 0x800003D4 // 14199ns\n+ 0x800003E0 // 14299ns\n+ 0x800003E4 // 14399ns\n+ 0x800003E8 // 14499ns\n+ 0x800003F4 // 14599ns\n+ 0x800003F8 // 14699ns\n+ 0x800003FC // 14799ns\n+ 0x80000408 // 14899ns\n+ 0x8000040C // 14999ns\n+ 0x80000410 // 15099ns\n+ 0x80000414 // 15199ns\n+ 0x80000418 // 15299ns\n+ 0x80000424 // 15399ns\n+ 0x80000428 // 15499ns\n+ 0x8000042C // 15599ns\n+ 0x80000438 // 15699ns\n+ 0x8000043C // 15799ns\n+ 0x80000440 // 15899ns\n+ 0x8000044C // 15999ns\n+ 0x80000450 // 16099ns\n+ 0x80000454 // 16199ns\n+ 0x80000460 // 16299ns\n+ 0x80000464 // 16399ns\n+ 0x80000468 // 16499ns\n+ 0x8000046C // 16599ns\n+ 0x80000478 // 16699ns\n+ 0x8000047C // 16799ns\n+ 0x80000480 // 16899ns\n+ 0x80000484 // 16999ns\n+ 0x80000490 // 17099ns\n+ 0x80000494 // 17199ns\n+ 0x80000498 // 17299ns\n+ 0x800004A4 // 17399ns\n+ 0x800004A8 // 17499ns\n+ 0x800004AC // 17599ns\n+ 0x80000004 // 17699ns\n+ 0x80000014 // 17799ns\n+ 0x80000018 // 17899ns\n+ 0x80000024 // 17999ns\n+ 0x80000028 // 18099ns\n+ 0x800004B0 // 18199ns\n+ 0x800004B4 // 18299ns\n+ 0x800004B8 // 18399ns\n+ 0x800004BC // 18499ns\n+ 0x800004C8 // 18599ns\n+ 0x80000004 // 18699ns\n+ 0x80000014 // 18799ns\n+ 0x80000018 // 18899ns\n+ 0x80000024 // 18999ns\n+ 0x80000028 // 19099ns\n+ 0x800004CC // 19199ns\n+ 0x80000004 // 19299ns\n+ 0x80000014 // 19399ns\n+ 0x80000018 // 19499ns\n+ 0x80000024 // 19599ns\n+ 0x80000028 // 19699ns\n+ 0x800004D0 // 19799ns\n+ 0x80000004 // 19899ns\n+ 0x80000014 // 19999ns\n+ 0x80000018 // 20099ns\n+ 0x80000024 // 20199ns\n+ 0x80000028 // 20299ns\n+ 0x800004D4 // 20399ns\n+ 0x80000004 // 20499ns\n+ 0x80000014 // 20599ns\n+ 0x80000018 // 20699ns\n+ 0x80000024 // 20799ns\n+ 0x80000028 // 20899ns\n+ 0x800004D8 // 20999ns\n+ 0x80000004 // 21099ns\n+ 0x80000014 // 21199ns\n+ 0x80000018 // 21299ns\n+ 0x80000024 // 21399ns\n+ 0x80000028 // 21499ns\n+ 0x800004DC // 21599ns\n+ 0x80000004 // 21699ns\n+ 0x80000014 // 21799ns\n+ 0x80000018 // 21899ns\n+ 0x80000024 // 21999ns\n+ 0x80000028 // 22099ns\n+ 0x800004E0 // 22199ns\n+ 0x800004E4 // 22299ns\n+ 0x800004F0 // 22399ns\n+ 0x800004F4 // 22499ns\n+ 0x800004F8 // 22599ns\n+ 0x800004FC // 22699ns\n+ 0x80000500 // 22799ns\n+ 0x80000504 // 22899ns\n+ 0x80000508 // 22999ns\n+ 0x8000050C // 23099ns\n+ 0x80000510 // 23199ns\n+ 0x80000514 // 23299ns\n+ 0x80000518 // 23399ns\n+ 0x80000524 // 23499ns\n+ 0x80000528 // 23599ns\n+ 0x8000052C // 23699ns\n+ 0x80000538 // 23799ns\n+ 0x8000053C // 23899ns\n+ 0x80000540 // 23999ns\n+ 0x8000054C // 24099ns\n+ 0x80000550 // 24199ns\n+ 0x80000554 // 24299ns\n+ 0x80000560 // 24399ns\n+ 0x80000564 // 24499ns\n+ 0x80000568 // 24599ns\n+ 0x8000056C // 24699ns\n+ 0x80000570 // 24799ns\n+ 0x80000574 // 24899ns\n+ 0x80000578 // 24999ns\n+ 0x8000057C // 25099ns\n+ 0x80000580 // 25199ns\n+ 0x80000584 // 25299ns\n+ 0x80000590 // 25399ns\n+ 0x80000594 // 25499ns\n+ 0x80000598 // 25599ns\n+ 0x8000059C // 25699ns\n+ 0x800005A0 // 25799ns\n+ 0x800005A4 // 25899ns\n+ 0x800005A8 // 25999ns\n+ 0x800005AC // 26099ns\n+ 0x800005B0 // 26199ns\n+ 0x800005B4 // 26299ns\n+ 0x800005C0 // 26399ns\n+ 0x800005C4 // 26499ns\n+ 0x000005C8 // 26599ns\n+ 0x80000008 // 26699ns\n+ 0x000005CC // 26799ns\n+ 0x000005DC // 26899ns\n+ 0x000005E0 // 26999ns\n+ 0x000005EC // 27099ns\n+ 0x000005F0 // 27199ns\n+ 0x000005EC // 27299ns\n+ 0x000005F0 // 27399ns\n// only check ma when output of ALU is used\n.verify ma[31:0] tvpairs()\n+ 399ns 0x00000001\n+ 599ns 0x00000001\n+ 799ns 0x00000001\n+ 999ns 0x00000000\n+ 1199ns 0x00000000\n+ 1399ns 0x00000000\n+ 1599ns 0x00000001\n+ 1699ns 0x80000000\n+ 1799ns 0x7FFFFFFF\n+ 1899ns 0xFFFFFFFF\n+ 1999ns 0x00000001\n+ 2199ns 0x00000001\n+ 2399ns 0x00000000\n+ 2599ns 0x00000000\n+ 2799ns 0x00000000\n+ 2999ns 0x00000000\n+ 3099ns 0x00000001\n+ 3199ns 0x00000002\n+ 3299ns 0x00000003\n+ 3399ns 0x00000004\n+ 3499ns 0x00000005\n+ 3599ns 0x00000006\n+ 3699ns 0x00000007\n+ 3799ns 0x00000008\n+ 3899ns 0x00000009\n+ 3999ns 0x0000000A\n+ 4099ns 0x0000000B\n+ 4199ns 0x0000000C\n+ 4299ns 0x0000000D\n+ 4399ns 0x0000000E\n+ 4499ns 0x0000000F\n+ 4599ns 0x00000010\n+ 4699ns 0x00000011\n+ 4799ns 0x00000012\n+ 4899ns 0x00000013\n+ 4999ns 0x00000014\n+ 5099ns 0x00000015\n+ 5199ns 0x00000016\n+ 5299ns 0x00000017\n+ 5399ns 0x00000018\n+ 5499ns 0x00000019\n+ 5599ns 0x0000001A\n+ 5699ns 0x0000001B\n+ 5799ns 0x0000001C\n+ 5899ns 0x0000001D\n+ 5999ns 0x0000001E\n+ 6099ns 0x0000001F\n+ 6199ns 0x00000001\n+ 6399ns 0x00000001\n+ 6599ns 0x00000001\n+ 6799ns 0x00000001\n+ 6999ns 0x00000001\n+ 7199ns 0x00000001\n+ 7399ns 0x00000001\n+ 7599ns 0x00000001\n+ 7799ns 0x00000001\n+ 7999ns 0x00000001\n+ 8199ns 0x00000001\n+ 8399ns 0x00000001\n+ 8599ns 0x00000001\n+ 8799ns 0x00000001\n+ 8999ns 0x00000001\n+ 9199ns 0x00000001\n+ 9399ns 0x00000001\n+ 9599ns 0x00000001\n+ 9799ns 0x00000001\n+ 9999ns 0x00000001\n+ 10199ns 0x00000001\n+ 10399ns 0x00000001\n+ 10599ns 0x00000001\n+ 10799ns 0x00000001\n+ 10999ns 0x00000001\n+ 11199ns 0x00000001\n+ 11399ns 0x00000001\n+ 11599ns 0x00000001\n+ 11799ns 0x00000001\n+ 11999ns 0x00000001\n+ 12199ns 0x00000001\n+ 12599ns 0x00000394\n+ 12699ns 0x80000000\n+ 12799ns 0x80000394\n+ 12999ns 0x00000710\n+ 13099ns 0x00000388\n+ 13199ns 0x00000001\n+ 13399ns 0x000005F4\n+ 13499ns 0x000005F8\n+ 13599ns 0xFFFFFFFF\n+ 13699ns 0x00000001\n+ 13899ns 0x55555554\n+ 13999ns 0xFFFFFFFF\n+ 14099ns 0x00000001\n+ 14299ns 0xAAAAAAAA\n+ 14399ns 0x00000000\n+ 14599ns 0x00000001\n+ 14699ns 0x00000000\n+ 14899ns 0x00000F0F\n+ 14999ns 0x00007F00\n+ 15099ns 0x00000F00\n+ 15199ns 0x00000001\n+ 15399ns 0x00007F0F\n+ 15499ns 0x00000001\n+ 15699ns 0x0000700F\n+ 15799ns 0x00000001\n+ 15999ns 0xFFFF8FF0\n+ 16099ns 0x00000001\n+ 16299ns 0x00000001\n+ 16399ns 0x00000001\n+ 16499ns 0x00000001\n+ 16699ns 0x80000000\n+ 16799ns 0xFFFFC000\n+ 16899ns 0x00000001\n+ 17099ns 0x00004000\n+ 17199ns 0x00000001\n+ 17399ns 0x00000000\n+ 17499ns 0x00000000\n+ 17799ns 0x00000000\n+ 17999ns 0x00000001\n+ 18199ns 0x00000960\n+ 18299ns 0x000004B0\n+ 18399ns 0x00000001\n+ 18799ns 0x00000000\n+ 18999ns 0x00000002\n+ 19399ns 0x00000000\n+ 19599ns 0x00000003\n+ 19999ns 0x00000000\n+ 20199ns 0x00000004\n+ 20599ns 0x00000000\n+ 20799ns 0x00000005\n+ 21199ns 0x00000000\n+ 21399ns 0x00000006\n+ 21799ns 0x00000000\n+ 21999ns 0x00000007\n+ 22199ns 0x00000001\n+ 22399ns 0x000005FC\n+ 22499ns 0x000005F4\n+ 22599ns 0x55555555\n+ 22699ns 0x000005FC\n+ 22799ns 0x00000600\n+ 22899ns 0x00000604\n+ 22999ns 0x00000608\n+ 23099ns 0x000005FC\n+ 23199ns 0x000005F8\n+ 23299ns 0x00000001\n+ 23499ns 0x00000600\n+ 23599ns 0x00000001\n+ 23799ns 0x00000604\n+ 23899ns 0x00000001\n+ 24099ns 0x00000608\n+ 24199ns 0x00000001\n+ 24399ns 0x00000014\n+ 24499ns 0x00000028\n+ 24599ns 0x00000028\n+ 24699ns 0x00000028\n+ 24799ns 0x00000028\n+ 24899ns 0x00000050\n+ 24999ns 0x00000078\n+ 25099ns 0x000000A0\n+ 25199ns 0x00000001\n+ 25499ns 0x00000B28\n+ 25599ns 0x00000B28\n+ 25699ns 0x00000B28\n+ 25799ns 0x00000B28\n+ 25899ns 0x00001650\n+ 25999ns 0x00002178\n+ 26099ns 0x00002CA0\n+ 26199ns 0x00000001\n+ 26399ns 0x000005C8\n+ 26899ns 0x00000001\n+ 27099ns 0x00000000\n+ 27299ns 0x00000000\n.verify moe periodic(199n,100n)\n+ 0x0 // 199ns\n+ 0x0 // 299ns\n+ 0x0 // 399ns\n+ 0x0 // 499ns\n+ 0x0 // 599ns\n+ 0x0 // 699ns\n+ 0x0 // 799ns\n+ 0x0 // 899ns\n+ 0x0 // 999ns\n+ 0x0 // 1099ns\n+ 0x0 // 1199ns\n+ 0x0 // 1299ns\n+ 0x0 // 1399ns\n+ 0x0 // 1499ns\n+ 0x0 // 1599ns\n+ 0x0 // 1699ns\n+ 0x0 // 1799ns\n+ 0x0 // 1899ns\n+ 0x0 // 1999ns\n+ 0x0 // 2099ns\n+ 0x0 // 2199ns\n+ 0x0 // 2299ns\n+ 0x0 // 2399ns\n+ 0x0 // 2499ns\n+ 0x0 // 2599ns\n+ 0x0 // 2699ns\n+ 0x0 // 2799ns\n+ 0x0 // 2899ns\n+ 0x0 // 2999ns\n+ 0x0 // 3099ns\n+ 0x0 // 3199ns\n+ 0x0 // 3299ns\n+ 0x0 // 3399ns\n+ 0x0 // 3499ns\n+ 0x0 // 3599ns\n+ 0x0 // 3699ns\n+ 0x0 // 3799ns\n+ 0x0 // 3899ns\n+ 0x0 // 3999ns\n+ 0x0 // 4099ns\n+ 0x0 // 4199ns\n+ 0x0 // 4299ns\n+ 0x0 // 4399ns\n+ 0x0 // 4499ns\n+ 0x0 // 4599ns\n+ 0x0 // 4699ns\n+ 0x0 // 4799ns\n+ 0x0 // 4899ns\n+ 0x0 // 4999ns\n+ 0x0 // 5099ns\n+ 0x0 // 5199ns\n+ 0x0 // 5299ns\n+ 0x0 // 5399ns\n+ 0x0 // 5499ns\n+ 0x0 // 5599ns\n+ 0x0 // 5699ns\n+ 0x0 // 5799ns\n+ 0x0 // 5899ns\n+ 0x0 // 5999ns\n+ 0x0 // 6099ns\n+ 0x0 // 6199ns\n+ 0x0 // 6299ns\n+ 0x0 // 6399ns\n+ 0x0 // 6499ns\n+ 0x0 // 6599ns\n+ 0x0 // 6699ns\n+ 0x0 // 6799ns\n+ 0x0 // 6899ns\n+ 0x0 // 6999ns\n+ 0x0 // 7099ns\n+ 0x0 // 7199ns\n+ 0x0 // 7299ns\n+ 0x0 // 7399ns\n+ 0x0 // 7499ns\n+ 0x0 // 7599ns\n+ 0x0 // 7699ns\n+ 0x0 // 7799ns\n+ 0x0 // 7899ns\n+ 0x0 // 7999ns\n+ 0x0 // 8099ns\n+ 0x0 // 8199ns\n+ 0x0 // 8299ns\n+ 0x0 // 8399ns\n+ 0x0 // 8499ns\n+ 0x0 // 8599ns\n+ 0x0 // 8699ns\n+ 0x0 // 8799ns\n+ 0x0 // 8899ns\n+ 0x0 // 8999ns\n+ 0x0 // 9099ns\n+ 0x0 // 9199ns\n+ 0x0 // 9299ns\n+ 0x0 // 9399ns\n+ 0x0 // 9499ns\n+ 0x0 // 9599ns\n+ 0x0 // 9699ns\n+ 0x0 // 9799ns\n+ 0x0 // 9899ns\n+ 0x0 // 9999ns\n+ 0x0 // 10099ns\n+ 0x0 // 10199ns\n+ 0x0 // 10299ns\n+ 0x0 // 10399ns\n+ 0x0 // 10499ns\n+ 0x0 // 10599ns\n+ 0x0 // 10699ns\n+ 0x0 // 10799ns\n+ 0x0 // 10899ns\n+ 0x0 // 10999ns\n+ 0x0 // 11099ns\n+ 0x0 // 11199ns\n+ 0x0 // 11299ns\n+ 0x0 // 11399ns\n+ 0x0 // 11499ns\n+ 0x0 // 11599ns\n+ 0x0 // 11699ns\n+ 0x0 // 11799ns\n+ 0x0 // 11899ns\n+ 0x0 // 11999ns\n+ 0x0 // 12099ns\n+ 0x0 // 12199ns\n+ 0x0 // 12299ns\n+ 0x0 // 12399ns\n+ 0x0 // 12499ns\n+ 0x0 // 12599ns\n+ 0x0 // 12699ns\n+ 0x0 // 12799ns\n+ 0x0 // 12899ns\n+ 0x0 // 12999ns\n+ 0x0 // 13099ns\n+ 0x0 // 13199ns\n+ 0x0 // 13299ns\n+ 0x1 // 13399ns\n+ 0x1 // 13499ns\n+ 0x0 // 13599ns\n+ 0x0 // 13699ns\n+ 0x0 // 13799ns\n+ 0x0 // 13899ns\n+ 0x0 // 13999ns\n+ 0x0 // 14099ns\n+ 0x0 // 14199ns\n+ 0x0 // 14299ns\n+ 0x0 // 14399ns\n+ 0x0 // 14499ns\n+ 0x0 // 14599ns\n+ 0x0 // 14699ns\n+ 0x0 // 14799ns\n+ 0x0 // 14899ns\n+ 0x0 // 14999ns\n+ 0x0 // 15099ns\n+ 0x0 // 15199ns\n+ 0x0 // 15299ns\n+ 0x0 // 15399ns\n+ 0x0 // 15499ns\n+ 0x0 // 15599ns\n+ 0x0 // 15699ns\n+ 0x0 // 15799ns\n+ 0x0 // 15899ns\n+ 0x0 // 15999ns\n+ 0x0 // 16099ns\n+ 0x0 // 16199ns\n+ 0x0 // 16299ns\n+ 0x0 // 16399ns\n+ 0x0 // 16499ns\n+ 0x0 // 16599ns\n+ 0x0 // 16699ns\n+ 0x0 // 16799ns\n+ 0x0 // 16899ns\n+ 0x0 // 16999ns\n+ 0x0 // 17099ns\n+ 0x0 // 17199ns\n+ 0x0 // 17299ns\n+ 0x0 // 17399ns\n+ 0x0 // 17499ns\n+ 0x0 // 17599ns\n+ 0x0 // 17699ns\n+ 0x0 // 17799ns\n+ 0x0 // 17899ns\n+ 0x0 // 17999ns\n+ 0x0 // 18099ns\n+ 0x0 // 18199ns\n+ 0x0 // 18299ns\n+ 0x0 // 18399ns\n+ 0x0 // 18499ns\n+ 0x0 // 18599ns\n+ 0x0 // 18699ns\n+ 0x0 // 18799ns\n+ 0x0 // 18899ns\n+ 0x0 // 18999ns\n+ 0x0 // 19099ns\n+ 0x0 // 19199ns\n+ 0x0 // 19299ns\n+ 0x0 // 19399ns\n+ 0x0 // 19499ns\n+ 0x0 // 19599ns\n+ 0x0 // 19699ns\n+ 0x0 // 19799ns\n+ 0x0 // 19899ns\n+ 0x0 // 19999ns\n+ 0x0 // 20099ns\n+ 0x0 // 20199ns\n+ 0x0 // 20299ns\n+ 0x0 // 20399ns\n+ 0x0 // 20499ns\n+ 0x0 // 20599ns\n+ 0x0 // 20699ns\n+ 0x0 // 20799ns\n+ 0x0 // 20899ns\n+ 0x0 // 20999ns\n+ 0x0 // 21099ns\n+ 0x0 // 21199ns\n+ 0x0 // 21299ns\n+ 0x0 // 21399ns\n+ 0x0 // 21499ns\n+ 0x0 // 21599ns\n+ 0x0 // 21699ns\n+ 0x0 // 21799ns\n+ 0x0 // 21899ns\n+ 0x0 // 21999ns\n+ 0x0 // 22099ns\n+ 0x0 // 22199ns\n+ 0x0 // 22299ns\n+ 0x0 // 22399ns\n+ 0x1 // 22499ns\n+ 0x0 // 22599ns\n+ 0x0 // 22699ns\n+ 0x0 // 22799ns\n+ 0x0 // 22899ns\n+ 0x0 // 22999ns\n+ 0x1 // 23099ns\n+ 0x1 // 23199ns\n+ 0x0 // 23299ns\n+ 0x0 // 23399ns\n+ 0x1 // 23499ns\n+ 0x0 // 23599ns\n+ 0x0 // 23699ns\n+ 0x1 // 23799ns\n+ 0x0 // 23899ns\n+ 0x0 // 23999ns\n+ 0x1 // 24099ns\n+ 0x0 // 24199ns\n+ 0x0 // 24299ns\n+ 0x0 // 24399ns\n+ 0x0 // 24499ns\n+ 0x0 // 24599ns\n+ 0x0 // 24699ns\n+ 0x0 // 24799ns\n+ 0x0 // 24899ns\n+ 0x0 // 24999ns\n+ 0x0 // 25099ns\n+ 0x0 // 25199ns\n+ 0x0 // 25299ns\n+ 0x0 // 25399ns\n+ 0x0 // 25499ns\n+ 0x0 // 25599ns\n+ 0x0 // 25699ns\n+ 0x0 // 25799ns\n+ 0x0 // 25899ns\n+ 0x0 // 25999ns\n+ 0x0 // 26099ns\n+ 0x0 // 26199ns\n+ 0x0 // 26299ns\n+ 0x0 // 26399ns\n+ 0x0 // 26499ns\n+ 0x0 // 26599ns\n+ 0x0 // 26699ns\n+ 0x0 // 26799ns\n+ 0x0 // 26899ns\n+ 0x0 // 26999ns\n+ 0x0 // 27099ns\n+ 0x0 // 27199ns\n+ 0x0 // 27299ns\n+ 0x0 // 27399ns\n.verify mrd[31:0] tvpairs()\n+ 13399ns 0xAAAAAAAA\n+ 13499ns 0x55555555\n+ 22499ns 0xAAAAAAAA\n+ 23099ns 0x55555555\n+ 23199ns 0x55555555\n+ 23499ns 0x55555555\n+ 23799ns 0x55555555\n+ 24099ns 0x55555555\n.verify wr periodic(199n,100n)\n+ 0x0 // 199ns\n+ 0x0 // 299ns\n+ 0x0 // 399ns\n+ 0x0 // 499ns\n+ 0x0 // 599ns\n+ 0x0 // 699ns\n+ 0x0 // 799ns\n+ 0x0 // 899ns\n+ 0x0 // 999ns\n+ 0x0 // 1099ns\n+ 0x0 // 1199ns\n+ 0x0 // 1299ns\n+ 0x0 // 1399ns\n+ 0x0 // 1499ns\n+ 0x0 // 1599ns\n+ 0x0 // 1699ns\n+ 0x0 // 1799ns\n+ 0x0 // 1899ns\n+ 0x0 // 1999ns\n+ 0x0 // 2099ns\n+ 0x0 // 2199ns\n+ 0x0 // 2299ns\n+ 0x0 // 2399ns\n+ 0x0 // 2499ns\n+ 0x0 // 2599ns\n+ 0x0 // 2699ns\n+ 0x0 // 2799ns\n+ 0x0 // 2899ns\n+ 0x0 // 2999ns\n+ 0x0 // 3099ns\n+ 0x0 // 3199ns\n+ 0x0 // 3299ns\n+ 0x0 // 3399ns\n+ 0x0 // 3499ns\n+ 0x0 // 3599ns\n+ 0x0 // 3699ns\n+ 0x0 // 3799ns\n+ 0x0 // 3899ns\n+ 0x0 // 3999ns\n+ 0x0 // 4099ns\n+ 0x0 // 4199ns\n+ 0x0 // 4299ns\n+ 0x0 // 4399ns\n+ 0x0 // 4499ns\n+ 0x0 // 4599ns\n+ 0x0 // 4699ns\n+ 0x0 // 4799ns\n+ 0x0 // 4899ns\n+ 0x0 // 4999ns\n+ 0x0 // 5099ns\n+ 0x0 // 5199ns\n+ 0x0 // 5299ns\n+ 0x0 // 5399ns\n+ 0x0 // 5499ns\n+ 0x0 // 5599ns\n+ 0x0 // 5699ns\n+ 0x0 // 5799ns\n+ 0x0 // 5899ns\n+ 0x0 // 5999ns\n+ 0x0 // 6099ns\n+ 0x0 // 6199ns\n+ 0x0 // 6299ns\n+ 0x0 // 6399ns\n+ 0x0 // 6499ns\n+ 0x0 // 6599ns\n+ 0x0 // 6699ns\n+ 0x0 // 6799ns\n+ 0x0 // 6899ns\n+ 0x0 // 6999ns\n+ 0x0 // 7099ns\n+ 0x0 // 7199ns\n+ 0x0 // 7299ns\n+ 0x0 // 7399ns\n+ 0x0 // 7499ns\n+ 0x0 // 7599ns\n+ 0x0 // 7699ns\n+ 0x0 // 7799ns\n+ 0x0 // 7899ns\n+ 0x0 // 7999ns\n+ 0x0 // 8099ns\n+ 0x0 // 8199ns\n+ 0x0 // 8299ns\n+ 0x0 // 8399ns\n+ 0x0 // 8499ns\n+ 0x0 // 8599ns\n+ 0x0 // 8699ns\n+ 0x0 // 8799ns\n+ 0x0 // 8899ns\n+ 0x0 // 8999ns\n+ 0x0 // 9099ns\n+ 0x0 // 9199ns\n+ 0x0 // 9299ns\n+ 0x0 // 9399ns\n+ 0x0 // 9499ns\n+ 0x0 // 9599ns\n+ 0x0 // 9699ns\n+ 0x0 // 9799ns\n+ 0x0 // 9899ns\n+ 0x0 // 9999ns\n+ 0x0 // 10099ns\n+ 0x0 // 10199ns\n+ 0x0 // 10299ns\n+ 0x0 // 10399ns\n+ 0x0 // 10499ns\n+ 0x0 // 10599ns\n+ 0x0 // 10699ns\n+ 0x0 // 10799ns\n+ 0x0 // 10899ns\n+ 0x0 // 10999ns\n+ 0x0 // 11099ns\n+ 0x0 // 11199ns\n+ 0x0 // 11299ns\n+ 0x0 // 11399ns\n+ 0x0 // 11499ns\n+ 0x0 // 11599ns\n+ 0x0 // 11699ns\n+ 0x0 // 11799ns\n+ 0x0 // 11899ns\n+ 0x0 // 11999ns\n+ 0x0 // 12099ns\n+ 0x0 // 12199ns\n+ 0x0 // 12299ns\n+ 0x0 // 12399ns\n+ 0x0 // 12499ns\n+ 0x0 // 12599ns\n+ 0x0 // 12699ns\n+ 0x0 // 12799ns\n+ 0x0 // 12899ns\n+ 0x0 // 12999ns\n+ 0x0 // 13099ns\n+ 0x0 // 13199ns\n+ 0x0 // 13299ns\n+ 0x0 // 13399ns\n+ 0x0 // 13499ns\n+ 0x0 // 13599ns\n+ 0x0 // 13699ns\n+ 0x0 // 13799ns\n+ 0x0 // 13899ns\n+ 0x0 // 13999ns\n+ 0x0 // 14099ns\n+ 0x0 // 14199ns\n+ 0x0 // 14299ns\n+ 0x0 // 14399ns\n+ 0x0 // 14499ns\n+ 0x0 // 14599ns\n+ 0x0 // 14699ns\n+ 0x0 // 14799ns\n+ 0x0 // 14899ns\n+ 0x0 // 14999ns\n+ 0x0 // 15099ns\n+ 0x0 // 15199ns\n+ 0x0 // 15299ns\n+ 0x0 // 15399ns\n+ 0x0 // 15499ns\n+ 0x0 // 15599ns\n+ 0x0 // 15699ns\n+ 0x0 // 15799ns\n+ 0x0 // 15899ns\n+ 0x0 // 15999ns\n+ 0x0 // 16099ns\n+ 0x0 // 16199ns\n+ 0x0 // 16299ns\n+ 0x0 // 16399ns\n+ 0x0 // 16499ns\n+ 0x0 // 16599ns\n+ 0x0 // 16699ns\n+ 0x0 // 16799ns\n+ 0x0 // 16899ns\n+ 0x0 // 16999ns\n+ 0x0 // 17099ns\n+ 0x0 // 17199ns\n+ 0x0 // 17299ns\n+ 0x0 // 17399ns\n+ 0x0 // 17499ns\n+ 0x0 // 17599ns\n+ 0x0 // 17699ns\n+ 0x0 // 17799ns\n+ 0x0 // 17899ns\n+ 0x0 // 17999ns\n+ 0x0 // 18099ns\n+ 0x0 // 18199ns\n+ 0x0 // 18299ns\n+ 0x0 // 18399ns\n+ 0x0 // 18499ns\n+ 0x0 // 18599ns\n+ 0x0 // 18699ns\n+ 0x0 // 18799ns\n+ 0x0 // 18899ns\n+ 0x0 // 18999ns\n+ 0x0 // 19099ns\n+ 0x0 // 19199ns\n+ 0x0 // 19299ns\n+ 0x0 // 19399ns\n+ 0x0 // 19499ns\n+ 0x0 // 19599ns\n+ 0x0 // 19699ns\n+ 0x0 // 19799ns\n+ 0x0 // 19899ns\n+ 0x0 // 19999ns\n+ 0x0 // 20099ns\n+ 0x0 // 20199ns\n+ 0x0 // 20299ns\n+ 0x0 // 20399ns\n+ 0x0 // 20499ns\n+ 0x0 // 20599ns\n+ 0x0 // 20699ns\n+ 0x0 // 20799ns\n+ 0x0 // 20899ns\n+ 0x0 // 20999ns\n+ 0x0 // 21099ns\n+ 0x0 // 21199ns\n+ 0x0 // 21299ns\n+ 0x0 // 21399ns\n+ 0x0 // 21499ns\n+ 0x0 // 21599ns\n+ 0x0 // 21699ns\n+ 0x0 // 21799ns\n+ 0x0 // 21899ns\n+ 0x0 // 21999ns\n+ 0x0 // 22099ns\n+ 0x0 // 22199ns\n+ 0x0 // 22299ns\n+ 0x0 // 22399ns\n+ 0x0 // 22499ns\n+ 0x0 // 22599ns\n+ 0x1 // 22699ns\n+ 0x1 // 22799ns\n+ 0x1 // 22899ns\n+ 0x1 // 22999ns\n+ 0x0 // 23099ns\n+ 0x0 // 23199ns\n+ 0x0 // 23299ns\n+ 0x0 // 23399ns\n+ 0x0 // 23499ns\n+ 0x0 // 23599ns\n+ 0x0 // 23699ns\n+ 0x0 // 23799ns\n+ 0x0 // 23899ns\n+ 0x0 // 23999ns\n+ 0x0 // 24099ns\n+ 0x0 // 24199ns\n+ 0x0 // 24299ns\n+ 0x0 // 24399ns\n+ 0x0 // 24499ns\n+ 0x0 // 24599ns\n+ 0x0 // 24699ns\n+ 0x0 // 24799ns\n+ 0x0 // 24899ns\n+ 0x0 // 24999ns\n+ 0x0 // 25099ns\n+ 0x0 // 25199ns\n+ 0x0 // 25299ns\n+ 0x0 // 25399ns\n+ 0x0 // 25499ns\n+ 0x0 // 25599ns\n+ 0x0 // 25699ns\n+ 0x0 // 25799ns\n+ 0x0 // 25899ns\n+ 0x0 // 25999ns\n+ 0x0 // 26099ns\n+ 0x0 // 26199ns\n+ 0x0 // 26299ns\n+ 0x0 // 26399ns\n+ 0x0 // 26499ns\n+ 0x0 // 26599ns\n+ 0x0 // 26699ns\n+ 0x0 // 26799ns\n+ 0x0 // 26899ns\n+ 0x0 // 26999ns\n+ 0x0 // 27099ns\n+ 0x0 // 27199ns\n+ 0x0 // 27299ns\n+ 0x0 // 27399ns\n.verify mwd[31:0] tvpairs()\n+ 22699ns 0x155555555\n+ 22799ns 0x155555555\n+ 22899ns 0x155555555\n+ 22999ns 0x155555555\n"
			}
		},
		"lab6.jsim":
		{
			"name":"//lab 6/lab6.jsim",
			"data":".include \"shared/nominal.jsim\"\n.include \"shared/stdcell.jsim\"\n.include \"lab 6/lab6pc.jsim\"\n\n\n.subckt pc clk reset ia[31:0]\nXdummy GND[31:0] constant0\nXbeta a ba c beta\nXpcselm RESET#32 pcpf constant0 pcpf mux2\n.ends"
		}
	},
	"test_file.js":
	{
		"name":"//test_file.jsim",
		"data":".include \"shared/nominal.jsim\"\n.include \"shared/stdcell.jsim\"\n.include \"lab 6/lab6pc.jsim\"\n\n\n.subckt pc clk reset ia[31:0]\nXdummy GND[31:0] constant0\nXbeta a ba c beta\nXpcselm RESET#32 pcpf constant0 pcpf mux2\n.ends"
	}
}